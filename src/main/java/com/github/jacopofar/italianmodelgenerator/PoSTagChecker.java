package com.github.jacopofar.italianmodelgenerator;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;

/**
 * Checks that two words have the same PoS tag (or at least one in common when more than one)
 * The class uses a list of words and corresponding PoS tags like the one generated by POSListGenerator
 * */
public class PoSTagChecker {
	private HashMap<String,HashSet<String>> POSclasses=new HashMap<String,HashSet<String>>(5);
	private String[] validPOS;
	private PoSTagChecker(){}
	/**
	 * Return a POS tag checker which will use the given POS list working on the given POS tags
	 * Other POS tags will be ignored
	 * */
	public static PoSTagChecker getInstance(String POSListPath,String...validPOS) throws IOException{
		PoSTagChecker pc = new PoSTagChecker();
		pc.validPOS=validPOS.clone();
		for(String pos:validPOS)
			pc.POSclasses.put(pos, new HashSet<String>(1000));
		FileReader fr=new FileReader(POSListPath);
		BufferedReader br=new BufferedReader(fr);
		String line;
		while((line=br.readLine())!=null){
			String[] p = line.toLowerCase().split("\t");
			for(String pos:p[1].split(",")){
				if(pc.POSclasses.containsKey(pos))
					pc.POSclasses.get(pos).add(p[0]);
			}
		}
		br.close();
		return pc;
	}

	/**
	 * Returns true only when the two words are present in the dictionary and have a
	 * common POS tag which is also among the valid ones given when instantiating the checker
	 * */
	public boolean haveCommonPOS(String a,String b){
		for(String pos:validPOS){
			HashSet<String> checkSet = POSclasses.get(pos);
			if(checkSet.contains(a) && checkSet.contains(b))
				return true;
		}
		return false;
	}

}
